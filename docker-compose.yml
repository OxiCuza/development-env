version: '3.3'

networks:
    local_network:
        driver: bridge

services:
    workspace-php81:
        build:
            context: ./
            dockerfile: dockerfile-php81
        image: php-81
        container_name: workspace-php81
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./src:/var/www/
        networks:
            - local_network

    workspace-php74:
        build:
            context: ./
            dockerfile: dockerfile-php74
        image: php-74
        container_name: workspace-php74
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./src:/var/www/
        networks:
            - local_network

    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./src:/var/www
            - ./nginx:/etc/nginx/conf.d
            # - ./nginx/ssl/domain.id.crt:/etc/nginx/domain.id.crt
            # - ./nginx/ssl/domain.id.key:/etc/nginx/domain.id.key
        networks:
            - local_network
        depends_on:
            - workspace-php81
            - workspace-php74

    mariadb:
        image: mariadb:10.6.4-focal
        container_name: mariadb
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mariadb
        ports:
            - "3306:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        user: mysql
        networks:
            - local_network

    phpmyadmin:
        image: phpmyadmin:latest
        ports:
            - 8001:80
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=mariadb
            - UPLOAD_LIMIT=300M
        networks:
            - local_network
        depends_on:
            - mariadb

    # postgres:
    #     image: postgres
    #     container_name: postgres
    #     restart: unless-stopped
    #     environment:
    #         POSTGRES_PASSWORD: ${DB_PASSWORD}
    #         POSTGRES_USER: ${DB_USERNAME}
    #         PGDATA: /var/lib/postgresql/data
    #     ports:
    #         - "5432:5432"
    #     volumes:
    #         - ./data/postgres:/var/lib/postgresql/data
    #         - ./data/sidita:/sidita
    #     networks:
    #         - local_network

    # pgadmin:
    #     container_name: pgadmin_container
    #     image: dpage/pgadmin4
    #     environment:
    #         PGADMIN_DEFAULT_EMAIL: example@mail.com
    #         PGADMIN_DEFAULT_PASSWORD: root
    #     ports:
    #         - 8002:80
    #     volumes:
    #         - ./pgadmin-data:/var/lib/pgadmin
    #     networks:
    #         - local_network
    #     depends_on:
    #         - postgres

    # mongodb:
    #     image: mongo
    #     restart: always
    #     ports:
    #         - 27017:27017
    #     volumes:
    #         - ./mongodb:/data/db
    #     networks:
    #         - local_network

    # mongo-express:
    #     image: mongo-express
    #     restart: always
    #     ports:
    #         - 8003:8081
    #     environment:
    #         ME_CONFIG_MONGODB_SERVER: mongodb
    #     depends_on:
    #         - mongodb
    #     networks:
    #         - local_network

    # redis:
    #     image: redis/redis-stack
    #     restart: always
    #     ports:
    #         - 10001:6379
    #         - 13333:8004
    #     networks:
    #         - local_network
